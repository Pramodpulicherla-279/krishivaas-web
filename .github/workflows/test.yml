name: API Tests with Deployment

on:
  push:
    branches: [ pramod ]
  pull_request:

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      actions: write
      checks: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install allure-pytest
        
    - name: Install Java
      run: sudo apt-get install -y default-jre
        
    - name: Install Allure
      run: |
        wget https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.24.0/allure-commandline-2.24.0.zip
        sudo unzip allure-commandline-2.24.0.zip -d /opt/
        sudo ln -s /opt/allure-2.24.0/bin/allure /usr/bin/allure
        
    - name: Run tests and generate results
      env:
        BASE_URL: ${{ secrets.BASE_URL }}
        TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
        TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
      run: |
        pytest tests --alluredir=allure-results -v || true
        
    - name: Generate Allure report
      if: always()  # This ensures the step runs even if previous steps fail
      run: |
        mkdir -p allure-report
        allure generate allure-results --clean -o allure-report
        
    - name: Deploy to GitHub Pages
      if: always()  # This ensures deployment happens regardless of test results
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: ./allure-report
        force_orphan: true